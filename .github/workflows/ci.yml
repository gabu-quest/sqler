name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-test:
    name: Tests • ${{ matrix.os }} • py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup UV
        uses: astral-sh/setup-uv@v4
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Sync dependencies (main + dev)
        run: |
          # Create .venv and install project + dev group strictly from uv.lock
          uv sync --dev --frozen

      - name: Show versions
        run: |
          uv run python --version
          uv run ruff --version
          uv run pytest --version

      - name: Lint (ruff)
        run: uv run ruff check .

      - name: Run unit tests (perf excluded)
        env:
          PYTHONUTF8: "1"
        run: uv run pytest -q -m "not perf" --disable-warnings

      - name: Smoke example script
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ -f examples/sync_model_quickstart.py ]; then
            uv run python examples/sync_model_quickstart.py > /dev/null
          fi
